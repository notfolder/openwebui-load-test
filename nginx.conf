worker_processes auto;

events {
    worker_connections 10240;
    multi_accept on;
}

http {
  resolver 127.0.0.11 valid=10s ipv6=off;

  # ip_hashに対応してjmeterから別々のipに見せる方法
  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;
  real_ip_recursive on;

  # upstream ブロックを追加して、Open WebUI のバックエンドサーバーを定義
  upstream openwebui_backend {
    zone openwebui_backend 64k;
    # Docker Compose は、サービス名 (openwebui) を使用して、
    # そのサービスの全インスタンスの IP アドレスを解決します。
    # ここでは、DNSラウンドロビンが使用され、Nginxは解決されたIPアドレスに対して
    # デフォルトのラウンドロビンロードバランシングを行います。
    ip_hash; # 同一IPからのリクエストは同じサーバに
    server openwebui:8080 resolve; # openwebui サービス名とポートを指定
  }
  server {
    listen 80;

    location / {
      # proxy_pass http://openwebui:8080;
      proxy_pass http://openwebui_backend;

      proxy_read_timeout 30000;
      proxy_connect_timeout 60000;
      proxy_send_timeout 60000;

      # ▼ 必須ヘッダー（stream や websocket 用）
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # ▼ SSE / WebSocket 用の設定
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      # ▼ streaming / chunked encoding 無効化（クライアントとの互換性確保）
      proxy_buffering off;
      proxy_cache off;
      proxy_set_header Accept-Encoding "";
      chunked_transfer_encoding off;
    }

    location /nginx_status {
      stub_status;
      allow all;
    }
  }
}
