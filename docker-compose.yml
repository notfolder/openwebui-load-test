version: "3.8"

services:

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    # container_name: openwebui
    # ports:
    #   - "3000:8080"  # Uvicornデフォルトポート
    environment:
      - OLLAMA_BASE_URL=http://ollama-mock:11434
      - ENABLE_OPENAI_API_COMPAT=true
      - DATABASE_URL=postgresql://openwebui:openwebui@db:5432/openwebui
    networks:
      - monitor-net
    depends_on:
      - ollama-mock
      - db
    # ロードバランシングのために複数起動する設定
    deploy:
      mode: replicated
      replicas: 3 # ここで Open WebUI のインスタンス数を指定 (例: 3つ)

  db:
    image: postgres:15
    container_name: openwebui-db
    environment:
      POSTGRES_USER: openwebui
      POSTGRES_PASSWORD: openwebui
      POSTGRES_DB: openwebui
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitor-net

  ollama-mock:
    container_name: ollama-mock
    # コンテナのビルド設定
    build:
      # Dockerfileがあるディレクトリ（カレントディレクトリ）を指定します
      context: .
      # 使用するDockerfileの名前を指定します（デフォルトで'Dockerfile'が使われます）
      dockerfile: Dockerfile

    # ポートのマッピング設定（"ホスト側のポート:コンテナ側のポート"）
    ports:
      - "11434:11434"

    # 環境変数を設定します
    # ここで設定した値がDockerfile内のENVの値を上書きします
    environment:
      - GUNICORN_WORKERS=21
    networks:
      - monitor-net

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - openwebui
    networks:
      - monitor-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      # - /var/run/docker.sock:/var/run/docker.sock    # ← 追加：Docker API へのアクセス権を付与
    networks:
      - monitor-net

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command:
      - "-nginx.scrape-uri=http://nginx/nginx_status"
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local
